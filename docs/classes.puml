@startuml classes

skinparam classAttributeIconSize 0

class Repository {
  model: Model
  - storage: StorageAdapter

  + findAll(): List<Model>
  + findById(id: UUID): Model
  + create(data: Model): Void
  + deleteById(id: UUID): Void
  + updateById(id: UUID, newData: Model): Void
}

class SocketClient {
  - socket: socket
}

class Controller {
  - repository: Repository

  + create(request: Request): Void 
  + update(request: Request): Void 
  + delete(request: Request): Void 
  + list(request: Request): List<Model>
  + read(request: Request): Model
}

class OperationController {
  - client: SocketClient
}

class Person {
  - cpf: String
  - name: String
  - address: String
}

class Model {
  - id: UUID
}

interface StorageAdapter {
  + findAll(self): List<Model>
  + findById(self, id: UUID): Model
  + create(self, data: Model)
  + deleteById(self, id: UUID)
  + updateById(self, id: UUID, newData: Model)
}

class MemoryStorageAdapter {
  - store: HashMap
}

class PersonRepository {
  - model: Person

  + findByCpf(cpf: String): Person:
  + updateByCpf(cpf, payload): Void
  + deleteByCpf(cpf: String): Void
} 

class PersonController {
  - repository: PersonRepository

  + find_by_cpf(request: Request): Person
  + update_by_cpf(request: Request): Person
  + delete_by_cpf(request: Request): Person
}

Person --|> Model
PersonController --|> Controller
PersonRepository --|> Repository
MemoryStorageAdapter ..|> StorageAdapter
PersonRepository o-- MemoryStorageAdapter
PersonRepository o-- Person
OperationController o-- SocketClient
PersonController o-- PersonRepository